package com.gastronomic.contest.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DishAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDishAllPropertiesEquals(Dish expected, Dish actual) {
        assertDishAutoGeneratedPropertiesEquals(expected, actual);
        assertDishAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDishAllUpdatablePropertiesEquals(Dish expected, Dish actual) {
        assertDishUpdatableFieldsEquals(expected, actual);
        assertDishUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDishAutoGeneratedPropertiesEquals(Dish expected, Dish actual) {
        assertThat(expected)
            .as("Verify Dish auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDishUpdatableFieldsEquals(Dish expected, Dish actual) {
        assertThat(expected)
            .as("Verify Dish relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()))
            .satisfies(e -> assertThat(e.getImageContentType()).as("check image contenty type").isEqualTo(actual.getImageContentType()))
            .satisfies(e -> assertThat(e.getRestaurant()).as("check restaurant").isEqualTo(actual.getRestaurant()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDishUpdatableRelationshipsEquals(Dish expected, Dish actual) {}
}
